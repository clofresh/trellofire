{
  "version": 3,
  "file": "main.js",
  "sources": [
    "peg/action.js",
    "action.js",
    "peg/query.js",
    "query.js",
    "stores/lists.js",
    "stores/selected.js",
    "views/trello_item!jsx",
    "views/trello_group!jsx",
    "views/query_bar!jsx",
    "views/trello_board!jsx",
    "app!jsx",
    "util.js",
    "main.js"
  ],
  "names": [],
  "mappingsbA,ADgcA;AC/bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACznlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACphNA,ADiNA;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "var _action_parser = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = [],\n        peg$c2 = /^[ ]/,\n        peg$c3 = { type: \"class\", value: \"[ ]\", description: \"[ ]\" },\n        peg$c4 = null,\n        peg$c5 = function(head, tail) {\n             var vals = [head];\n             if (tail === null) {\n                 return vals;\n             } else {\n                 return vals.concat(tail);\n             }\n        },\n        peg$c6 = \":\",\n        peg$c7 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c8 = function(f, value) { return {field: f, value: value} },\n        peg$c9 = \"title\",\n        peg$c10 = { type: \"literal\", value: \"title\", description: \"\\\"title\\\"\" },\n        peg$c11 = \"\\\"\",\n        peg$c12 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c13 = /^[^\"]/,\n        peg$c14 = { type: \"class\", value: \"[^\\\"]\", description: \"[^\\\"]\" },\n        peg$c15 = function(val) { return strconcat(val) },\n        peg$c16 = /^[^ ]/,\n        peg$c17 = { type: \"class\", value: \"[^ ]\", description: \"[^ ]\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsequery();\n\n      return s0;\n    }\n\n    function peg$parsequery() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseterm();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c2.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c2.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsequery();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c4;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c5(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseterm() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefield();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s2 = peg$c6;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c7); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsestring();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c8(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefield() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c9) {\n        s0 = peg$c9;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c10); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c13.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c13.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c11;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c15(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c16.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c16.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n          }\n        } else {\n          s1 = peg$c0;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n\n        function strconcat(s) { return s.join(\"\") }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\ndefine('peg/action',[],function() { return _action_parser; });\n\n",
    "define('action',[\"./peg/action\"], function(Parser) {\n  return {\n    parse: function(str) {\n      var output = {\n        fields: {}\n      };\n      var terms = Parser.parse(str);\n      for (var i = 0; i < terms.length; ++i) {\n        var term = terms[i];\n\n        var field = term.field;\n        var value = term.value;\n        switch (field) {\n          case \"title\":\n            output.fields[field] = value;\n            break;\n        }\n      }\n      output.terms = terms;\n      output.str = str;\n      return output;\n    }\n  };\n});\n\n",
    "var _query_parser = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = [],\n        peg$c2 = /^[ ]/,\n        peg$c3 = { type: \"class\", value: \"[ ]\", description: \"[ ]\" },\n        peg$c4 = null,\n        peg$c5 = function(head, tail) {\n             var vals = [head];\n             if (tail === null) {\n                 return vals;\n             } else {\n                 return vals.concat(tail);\n             }\n        },\n        peg$c6 = \":\",\n        peg$c7 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c8 = function(uop, field, value) {\n             return {\n                 field: field,\n                 value: value,\n                 op:    uop\n             }\n         },\n        peg$c9 = function(field, value) { return {field: field, value: value} },\n        peg$c10 = \"board\",\n        peg$c11 = { type: \"literal\", value: \"board\", description: \"\\\"board\\\"\" },\n        peg$c12 = \"groupby\",\n        peg$c13 = { type: \"literal\", value: \"groupby\", description: \"\\\"groupby\\\"\" },\n        peg$c14 = \"sort\",\n        peg$c15 = { type: \"literal\", value: \"sort\", description: \"\\\"sort\\\"\" },\n        peg$c16 = \"sortdir\",\n        peg$c17 = { type: \"literal\", value: \"sortdir\", description: \"\\\"sortdir\\\"\" },\n        peg$c18 = \"title\",\n        peg$c19 = { type: \"literal\", value: \"title\", description: \"\\\"title\\\"\" },\n        peg$c20 = \"\\\"\",\n        peg$c21 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c22 = /^[^\"]/,\n        peg$c23 = { type: \"class\", value: \"[^\\\"]\", description: \"[^\\\"]\" },\n        peg$c24 = function(val) { return strconcat(val) },\n        peg$c25 = /^[^ ]/,\n        peg$c26 = { type: \"class\", value: \"[^ ]\", description: \"[^ ]\" },\n        peg$c27 = \"!\",\n        peg$c28 = { type: \"literal\", value: \"!\", description: \"\\\"!\\\"\" },\n        peg$c29 = function() { return {type: \"unary\", name: \"not\"} },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsequery();\n\n      return s0;\n    }\n\n    function peg$parsequery() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseterm();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c2.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c2.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsequery();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c4;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c5(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseterm() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenot();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c4;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsefilter();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c6;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsestring();\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c8(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseidentifier();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s2 = peg$c6;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsestring();\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c9(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c10) {\n        s0 = peg$c10;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c12) {\n          s0 = peg$c12;\n          peg$currPos += 7;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c14) {\n            s0 = peg$c14;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 7) === peg$c16) {\n              s0 = peg$c16;\n              peg$currPos += 7;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsefilter();\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefilter() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c18) {\n        s0 = peg$c18;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c20;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c22.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c22.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c20;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c21); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c24(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c25.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c25.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c26); }\n            }\n          }\n        } else {\n          s1 = peg$c0;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenot() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c2.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c2.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n\n        function strconcat(s) { return s.join(\"\") }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\ndefine('peg/query',[],function() { return _query_parser; });\n\n",
    "define('query',[\"./peg/query\"], function(Parser) {\n  return {\n    parse: function(str) {\n      var output = {\n        filters: []\n      };\n      var terms = Parser.parse(str);\n      for (var i = 0; i < terms.length; ++i) {\n        var term = terms[i];\n\n        var field = term.field;\n        var value = term.value;\n        switch (field) {\n          case \"board\":\n          case \"groupby\":\n          case \"sort\":\n          case \"sortdir\":\n            output[field] = value;\n            break;\n          case \"title\":\n            output.filters.push(term);\n            break;\n        }\n      }\n      output.terms = terms;\n      output.str = str;\n      return output;\n    }\n  };\n});\n\n",
    "define('stores/lists',[],function() {\n  var module = {};\n  module.lists = {};\n\n  module.set = function(key, val) {\n    module.lists[key] = val;\n  };\n\n  module.get = function(key) {\n    return module.lists[key];\n  };\n\n  return module;\n});\n\n",
    "define('stores/selected',[],function() {\n  var module = {};\n  module.selected = {};\n\n  module.set = function(key, val) {\n    module.selected[key] = val;\n  };\n\n  module.any = function() {\n    for (var key in module.selected) {\n      if (module.selected[key]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  module.getSelected = function() {\n    var selected = [];\n    // For some reason for..in didn't work here\n    Object.keys(module.selected).forEach(function(key) {\n      if (module.selected[key]) {\n        selected.push(key);\n      }\n    });\n    return selected;\n  };\n\n  return module;\n});\n\n",
    "\ndefine('views/trello_item',[\n  'react',\n  'stores/lists',\n  'stores/selected'\n], function(React, Lists, Selected) {\n\n  return React.createClass({\n    getInitialState: function() {\n      return {\n        checked: false\n      };\n    },\n\n    handleClick: function(event) {\n      if (event.target.tagName !== \"A\") {\n        var newVal = !this.state.checked;\n        this.setState({\n          checked: newVal\n        });\n        Selected.set(this.props.data.id, newVal);\n      }\n    },\n\n    render: function() {\n      return (\n        React.createElement(\"tr\", {className: \"trelloItem\", onClick: this.handleClick}, \n          React.createElement(\"td\", {className: \"checkCol\"}, \n            React.createElement(\"input\", {type: \"checkbox\", checked: this.state.checked, onChange: this.handleClick})\n          ), \n          React.createElement(\"td\", {className: \"titleCol\"}, React.createElement(\"a\", {href: this.props.data.url}, this.props.data.name)), \n          React.createElement(\"td\", {className: \"listCol\"}, Lists.get(this.props.data.idList).name), \n          React.createElement(\"td\", {className: \"stateCol\"}, this.props.data.closed ? \"closed\" : \"open\"), \n          React.createElement(\"td\", {className: \"dueCol\"}, this.props.data.due)\n        )\n      );\n    }\n  });\n\n});\n\n",
    "\ndefine('views/trello_group',['react', './trello_item'], function(React, TrelloItem) {\n  return React.createClass({\n    render: function() {\n      var rows = this.props.cards.map(function(card) {\n        return (\n          React.createElement(TrelloItem, {key: card.id, data: card})\n        );\n      });\n\n      var heading;\n      if (this.props.group !== null) {\n        heading = React.createElement(\"div\", {className: \"panel-heading\"}, \n                    React.createElement(\"h1\", {className: \"panel-title\"}, this.props.group)\n                  );\n      }\n\n      return (\n        React.createElement(\"div\", {className: \"trelloGroup panel panel-info\"}, \n          heading, \n          React.createElement(\"table\", {className: \"trello table table-striped\"}, \n            React.createElement(\"thead\", null, \n              React.createElement(\"tr\", null, \n                React.createElement(\"th\", {className: \"checkCol\"}, \" \"), \n                React.createElement(\"th\", {className: \"titleCol\"}, \"Title\"), \n                React.createElement(\"th\", {className: \"listCol\"}, \"List\"), \n                React.createElement(\"th\", {className: \"stateCol\"}, \"State\"), \n                React.createElement(\"th\", {className: \"dueCol\"}, \"Due\")\n              )\n            ), \n            React.createElement(\"tbody\", null, \n              rows\n            )\n          )\n        )\n      );\n    }\n  });\n});\n\n",
    "\ndefine('views/query_bar',['react', 'query'], function(React, Query) {\n  return React.createClass({\n    getDefaultProps: function() {\n      return {\n        queue: []\n      };\n    },\n    getInitialState: function() {\n      return Query.parse(this.props.defaultQuery);\n    },\n    handleSubmit: function(event) {\n      event.preventDefault();\n      this.updateVal(event.target.getElementsByTagName('input')[0].value);\n    },\n    handleChange: function(event) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n      }\n      var input = event.target;\n      this.state.timer = setTimeout(function() {\n        this.updateVal(input.value);\n      }.bind(this), 500);\n    },\n    updateVal: function(val) {\n      var state;\n      if (val === \"\") {\n        state = {\n          str: \"\"\n        };\n      } else {\n        try {\n          state = Query.parse(val);\n          var url = window.location.origin + window.location.pathname\n            + '?q=' + encodeURIComponent(val);\n          history.replaceState(null, null, url);\n          localStorage.query = val;\n        } catch ( e ) {\n          console.log(e);\n        }\n      }\n      this.setState(state);\n      this.props.onUpdate(state);\n    },\n    render: function() {\n      return (\n        React.createElement(\"h3\", {className: \"page-header\"}, React.createElement(\"form\", {onSubmit: this.handleSubmit}, React.createElement(\"input\", {id: \"queryInput\", type: \"text\", className: \"form-control\", defaultValue: this.state.str, onChange: this.handleChange})))\n      );\n    }\n  });\n});\n\n",
    "\ndefine('views/trello_board',[\n  'react',\n  'trello',\n  'action',\n  'query',\n  'stores/lists',\n  'stores/selected',\n  './trello_group',\n  './query_bar'\n], function(React, Trello, Action, Query, Lists, Selected, TrelloGroup,\n  QueryBar) {\n  return React.createClass({\n    getInitialState: function() {\n      return {\n        response: {\n          cards: []\n        },\n        filtered: [],\n        query: Query.parse(this.props.defaultQuery)\n      };\n    },\n    updateBoard: function(query) {\n      console.log('Updating board with query', query);\n      Trello.boards.get(query.board, {\n        cards: 'all',\n        lists: 'all'\n      }, function(data) {\n        for (var i = 0; i < data.lists.length; i++) {\n          var list = data.lists[i];\n          Lists.set(list.id, list);\n        }\n        this.setState({\n          response: data,\n          filtered: [],\n          query: query\n        });\n      }.bind(this));\n    },\n    componentDidMount: function() {\n      this.updateBoard(this.state.query);\n    },\n\n    updateQuery: function(query) {\n      if (this.state.query.board !== query.board) {\n        this.updateBoard(query);\n      } else {\n        this.state.query = query;\n        this.setState(this.state);\n      }\n    },\n\n    handleActionMenu: function(event) {\n      // If any items are selected, open the context menu\n      if (Selected.any()) {\n        event.preventDefault();\n\n        // Move the context menu to the click position\n        var menu = document.getElementById('context-menu');\n        menu.style.left = JSON.stringify(event.pageX - 100) + 'px';\n        menu.style.top = JSON.stringify(event.pageY - 80) + 'px';\n\n        // Display it\n        if (!menu.classList.contains('open')) {\n          menu.classList.add('open');\n        }\n\n        // Clear the input and move the keyboard focus there\n        var input = document.getElementById('context-menu-input');\n        input.value = \"\";\n        input.focus();\n\n        // Set up an event handle to close the menu on esc key\n        document.onkeydown = function(event) {\n          if (event.keyCode === 27) { // Esc key code\n            this.closeMenu();\n            event.preventDefault();\n          }\n        }.bind(this);\n      }\n    },\n\n    closeMenu: function() {\n      var menu = document.getElementById('context-menu');\n      menu.classList.remove('open');\n      document.onkeydown = null;\n    },\n\n    handleActionSubmit: function(event) {\n      event.preventDefault();\n      var parsed = Action.parse(event.target.getElementsByTagName('input')[0].value);\n      var cardIds = Selected.getSelected();\n      for (var field in parsed.fields) {\n        switch (field) {\n          case \"title\":\n            var newVal = parsed.fields[field];\n            var pending = [];\n            for (var i = 0; i < cardIds.length; ++i) {\n              var cardId = cardIds[i];\n              console.log(cardId, newVal);\n              pending.push(Trello.put('cards/' + cardId + '/name',\n                {\n                  value: newVal\n                }));\n              for (var j = 0; j < this.state.response.cards.length; ++j) {\n                var card = this.state.response.cards[i];\n                if (card.id === cardId) {\n                  card.name = newVal;\n                }\n              }\n            }\n            console.log(pending);\n            // /1/cards/[card id or shortlink]/name\n            break;\n        }\n      }\n      this.setState(this.state);\n      this.closeMenu();\n    },\n\n    render: function() {\n      var grouped = {};\n      var cards = this.state.response.cards;\n      var filters = this.state.query.filters;\n      var groupby = this.state.query.groupby;\n      for (var i = 0; i < cards.length; ++i) {\n        var card = cards[i];\n\n        // Apply the filters\n        var matched = true;\n        for (var j = 0; j < filters.length; ++j) {\n          var filter = filters[j];\n          if (filter.op && filter.op.name == \"not\") {\n            matched = matched && !card.name.match(filter.value);\n          } else {\n            matched = matched && card.name.match(filter.value);\n          }\n        }\n\n        if (matched) {\n          // Apply the grouping\n          var key = card[groupby] || \"ungrouped\";\n          if (grouped[key] === undefined) {\n            grouped[key] = [card];\n          } else {\n            grouped[key].push(card);\n          }\n        }\n      }\n\n      // Apply the sorting\n      var sortKey = this.state.query.sort;\n      var sorter = null;\n      if (sortKey !== undefined) {\n        sorter = function(a, b) {\n          return a[sortKey] > b[sortKey];\n        };\n      }\n\n      // Render the groups\n      var groups = [];\n      for (var group in grouped) {\n        var cards = grouped[group];\n        if (sorter !== null) {\n          cards.sort(sorter);\n        }\n        var groupName;\n        if (groupby === undefined) {\n          groupName = null;\n        } else {\n          groupName = this.groupName(group);\n        }\n        groups.push(\n          React.createElement(TrelloGroup, {key: group, group: groupName, cards: cards})\n        );\n      }\n\n      return (\n        React.createElement(\"div\", {className: \"container\", onContextMenu: this.handleActionMenu}, \n          React.createElement(QueryBar, {defaultQuery: this.props.defaultQuery, onUpdate: this.updateQuery}), \" \", groups, \n          React.createElement(\"div\", {id: \"context-menu\", className: \"dropdown\"}, \n            React.createElement(\"ul\", {className: \"dropdown-menu\"}, \n              React.createElement(\"li\", null, \n                React.createElement(\"form\", {id: \"action-form\", onSubmit: this.handleActionSubmit}, \n                  React.createElement(\"label\", null, \"Action: \"), \n                  React.createElement(\"input\", {id: \"context-menu-input\", text: \"type\"})\n                )\n              )\n            )\n          )\n        )\n      );\n    },\n\n    groupName: function(group) {\n      if (this.state.query.groupby === \"idList\") {\n        var list = Lists.get(group);\n        if (list !== undefined) {\n          return list.name;\n        } else {\n          return \"N/A\";\n        }\n      } else {\n        return group;\n      }\n    }\n  });\n});\n\n",
    "\ndefine('app',['react', './views/trello_board'], function(React, TrelloBoard) {\n  var App = {};\n  App.init = function(query, el) {\n    var el = el || document.body;\n    React.render(React.createElement(TrelloBoard, {defaultQuery: query}), el);\n  };\n\n  return App;\n});\n\n",
    "define('util',{\n  setQueryString: function(qobj) {\n    var pairs = [];\n    for (var key in qobj) {\n      pairs.push(key + \"=\" + qobj[key]);\n    }\n    window.location.search = \"?\" + pairs.join(\"&\");\n  },\n  getQueryString: function() {\n    var kv = window.location.search.substr(1).split('&');\n    if (kv == \"\") return {};\n    var obj = {};\n\n    for (var i = 0; i < kv.length; ++i) {\n      var pair = kv[i].split('=', 2);\n      if (pair.length == 1) {\n        obj[pair[0]] = \"\";\n      } else {\n        obj[pair[0]] = decodeURIComponent(pair[1].replace(/\\+/g, \" \"));\n      }\n    }\n    return obj;\n  }\n});\n\n",
    "require.config({\n  baseUrl: 'js',\n  paths: {\n    bootstrap: \"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/js/bootstrap.min\",\n    jquery: \"//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min\",\n    jsx: \"bower_components/requirejs-react-jsx/jsx\",\n    JSXTransformer: \"//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer\",\n    react: \"//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react\",\n    text: \"bower_components/requirejs-text/text\",\n    trello: \"//api.trello.com/1/client.js?key=cd8f1241e56eb1c3d1fc2eb3b1d0708f\"\n  },\n\n  shim: {\n    bootstrap: ['jquery'],\n    JSXTransformer: \"JSXTransformer\",\n    react: {\n      exports: \"React\"\n    },\n    trello: {\n      deps: ['jquery'],\n      exports: 'Trello',\n    }\n  },\n\n  config: {\n    jsx: {\n      fileExtension: \".jsx\",\n      transformOptions: {\n        harmony: true,\n        stripTypes: false,\n        inlineSourceMap: true\n      },\n      usePragma: false\n    }\n  }\n});\n\nrequire(['app', 'jquery', 'trello', 'bootstrap', 'util'], function(\n  App, jQuery, Trello, Bootstrap, Util) {\n\n  Trello.authorize({\n    name: \"Trellofire\",\n    scope: {\n      read: true,\n      write: true,\n      account: false\n    },\n    expiration: \"never\",\n    success: function() {\n      var qstr = Util.getQueryString();\n      var query = qstr.q\n        || localStorage.query\n        || 'board:nC8QJJoZ groupby:idList';\n      App.init(query, document.getElementById('app'));\n    },\n    error: function() {\n      alert('error');\n    }\n  });\n});\n\ndefine(\"main\", function(){});\n\n"
  ]
}